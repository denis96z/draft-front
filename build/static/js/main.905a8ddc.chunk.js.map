{"version":3,"sources":["rpc.ts","CodeHighlight.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RPC_STATUS_TO_CODE","CodeHighlight","props","codeRef","React","value","hljs","current","ref","className","dangerouslySetInnerHTML","__html","SubMenu","Menu","Header","Layout","Content","Sider","Store","fetchedEndpoint","AppReady","sitemap","activeProject","initialState","search","activeEndpoint","parseHistoryParams","state","setState","store","updateState","key","pid","setTimeout","hash","id","title","name","queryString","window","location","document","clearTimeout","handle","addEventListener","removeEventListener","firstScroll","elem","querySelector","decodeURIComponent","requestAnimationFrame","scrollIntoView","behavior","length","Provider","style","display","width","height","alignItems","justifyContent","size","match","endpoint","find","p","useAppStore","AppLayout","src","theme","mode","defaultSelectedKeys","map","project","Item","Search","placeholder","onChange","evt","target","ProjectMenu","root","entries","selected","margin","minHeight","ProjectEndpoint","ProjectTree","entry","result","some","e","getProjectEntryKey","status","scheme","marginBottom","description","fontSize","cases","c","i","href","getCaseHref","Status","badge","direction","EndpointCase","getBaseURL","getRefType","type","meta_type","ev","enum","join","detail","params","Object","request","skey","required","comment","JSON","stringify","body","renderJSONObject","raw","ind","nind","val","refVal","refNested","nested","reduce","item","response","isOK","borderColor","position","top","right","cursor","onClick","el","createElement","setAttribute","left","appendChild","selection","getSelection","currentRanges","rangeCount","push","getRangeAt","select","execCommand","removeChild","removeAllRanges","forEach","range","addRange","copyToClipboard","toString","message","success","LinkOutlined","method","background","padding","color","toUpperCase","borderRadius","lineHeight","verticalAlign","rootEntries","flatMap","r","openKeys","menuItems","render","defaultOpenKeys","borderRight","onSelect","param","TreeNode","Tree","isEmpty","nodes","fuzzyHL","descr","showLine","defaultExpandAll","fuzzyMemo","pattern","fuzzyMatch","pre","post","rendered","App","rev","forceUpdate","list","loaded","cache","fetch","then","json","v","Boolean","hostname","ReactDOM","globalThis","GODRAFT_CONFIG","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.905a8ddc.chunk.js","sourcesContent":["export const RPC_STATUS_TO_CODE: {\n\t[status:string]: number;\n} = {\n\t'processing': 102,\n\t'ok': 200,\n\t'accepted': 202,\n\t'non_authoritative': 203,\n\t'partial': 206,\n\t'move': 301,\n\t'notmodified': 304,\n\t'invalid': 400,\n\t'payment_required': 402,\n\t'denied': 403,\n\t'notfound': 404,\n\t'unacceptable': 406,\n\t'timeout': 408,\n\t'conflict': 409,\n\t'expectation_failed': 417,\n\t'unprocessable': 422,\n\t'locked': 423,\n\t'failed_dependency': 424,\n\t'upgrade_required': 426,\n\t'many_requests': 429,\n\t'retry_with': 449,\n\t'unavailable_for_legal_reasons': 451,\n\t'fail': 500,\n\t'not_implemented': 501,\n\t'unavaliable': 503,\n\t'insufficient': 507,\n};\n","import * as React from 'react';\nimport * as hljs from 'highlight.js';\nimport 'highlight.js/styles/tomorrow.css';\n\n// hljs.registerLanguage('js', jsLang);\n\nexport type CodeHighlightProps = {\n\tvalue: string;\n}\n\nexport function CodeHighlight(props: CodeHighlightProps) {\n\tconst codeRef = React.useRef(null as HTMLElement | null);\n\tconst {\n\t\tvalue,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\thljs.highlightBlock(codeRef.current as any);\n\t}, [value]);\n\n\treturn (\n\t\t<pre>\n\t\t\t<code\n\t\t\t\tref={codeRef}\n\t\t\t\tclassName=\"javascript\"\n\t\t\t\tdangerouslySetInnerHTML={{__html: value}}\n\t\t\t/>\n\t\t</pre>\n\t);\n}\n","import * as React from 'react';\nimport { match as fuzzyMatch, MatchResult } from 'fuzzy';\nimport 'antd/dist/antd.css';\n\nimport { RPC_STATUS_TO_CODE } from './rpc';\nimport { AppSitemap, AppStore, AppState, ProjectEntry, Project, SchemeCase, ReflectItem, ReflectItemMap } from './typings';\n\nimport { CodeHighlight } from './CodeHighlight';\nimport { Layout, Menu, Input, Tree, Card, Divider, Typography, Breadcrumb, Tag, Result, Space, Spin, Badge, message } from 'antd';\nimport { SelectParam } from 'antd/lib/menu';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Text from 'antd/lib/typography/Text';\nimport {LinkOutlined} from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst Store = React.createContext({} as AppStore);\n\nexport type AppLoaderProps = {\n\tactiveProject?: string;\n\tsitemap?: Array<Project & {\n\t\tentries: Array<ProjectEntry | string>;\n\t}>;\n};\n\nconst fetchedEndpoint = {} as {\n\t[url:string]: ProjectEntry | null;\n};\n\nexport function App(props: AppLoaderProps) {\n\tconst [rev, updateState] = React.useState(0);\n\tconst forceUpdate = React.useCallback(() => { updateState(rev + 1); }, [rev]);\n\n\tif (!props.sitemap) {\n\t\treturn <Result status=\"error\" title=\"Sitemap not defined\"/>;\n\t}\n\n\tconst sitemap = props.sitemap.reduce((list, item) => {\n\t\tconst entries = [] as ProjectEntry[];\n\t\tlet loaded = true;\n\n\t\titem.entries.forEach((e) => {\n\t\t\tif (typeof e === 'string') {\n\t\t\t\tconst cache = fetchedEndpoint[e];\n\t\t\t\t\n\t\t\t\tif (cache === void 0) {\n\t\t\t\t\tloaded = false;\n\t\t\t\t\tfetchedEndpoint[e] = null;\n\t\t\t\t\tfetch(e).then(r => r.json()).then(json => {\n\t\t\t\t\t\tfetchedEndpoint[e] = json;\n\t\t\t\t\t\tforceUpdate();\n\t\t\t\t\t});\n\t\t\t\t} else if (cache === null) {\n\t\t\t\t\tloaded = false;\n\t\t\t\t} else {\n\t\t\t\t\tentries.push(cache);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tentries.push(e);\n\t\t\t}\n\t\t});\n\n\t\tif (loaded) {\n\t\t\tlist.push({\n\t\t\t\t...item,\n\t\t\t\tentries,\n\t\t\t});\n\t\t}\n\n\t\treturn list;\n\t}, [] as Project[]);\n\n\treturn (\n\t\t<AppReady\n\t\t\tkey={rev}\n\t\t\tactiveProject={sitemap.find(v => v.id === props.activeProject)}\n\t\t\tsitemap={sitemap}\n\t\t/>\n\t);\n}\n\nexport function AppReady(props: {activeProject?: Project, sitemap: AppSitemap}) {\n\tconst {sitemap, activeProject} = props;\n\tconst initialState = React.useMemo((): AppState => ({\n\t\tsearch: '',\n\t\tactiveProject,\n\t\tactiveEndpoint: '',\n\t\t...parseHistoryParams(sitemap),\n\t}), []);\n\tconst [state, setState] = React.useState(initialState);\n\tconst store: AppStore = {\n\t\tstate,\n\t\tupdateState: (key, value) => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t[key]: value,\n\t\t\t});\n\t\t},\n\t};\n\n\tReact.useEffect(() => {\n\t\tconst pid = setTimeout(() => {\n\t\t\tlet hash = state.activeProject ? state.activeProject.id : '';\n\t\t\tlet title = state.activeProject?.name\n\t\t\t\n\t\t\tif (state.activeEndpoint) {\n\t\t\t\thash += `:${state.activeEndpoint}`;\n\t\t\t\ttitle += state.activeEndpoint;\n\t\t\t}\n\n\t\t\tif (state.queryString) {\n\t\t\t\thash += `?${state.queryString}`;\n\t\t\t}\n\t\t\t\n\t\t\twindow.location.hash = hash;\n\t\t\tif (title) {\n\t\t\t\twindow.document.title = title!;\n\t\t\t}\n\t\t}, 250);\n\t\treturn () => {\n\t\t\tclearTimeout(pid);\n\t\t};\n\t}, [window.location.hash, state]);\n\n\tReact.useEffect(() => {\n\t\tconst handle = () => {\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t...parseHistoryParams(sitemap)\n\t\t\t});\n\t\t};\n\n\t\twindow.addEventListener('hashchange', handle);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('hashchange', handle);\n\t\t};\n\t}, []);\n\n\tconst firstScroll = React.useRef(true);\n\tReact.useEffect(() => {\n\t\tconst elem = document.querySelector(`[id=\"${decodeURIComponent(window.location.hash)}\"]`);\n\t\trequestAnimationFrame(() => {\n\t\t\telem && elem.scrollIntoView({behavior: firstScroll.current ? 'auto' : 'smooth'});\n\t\t\tfirstScroll.current = false;\n\t\t});\n\t}, [window.location.hash]);\n\n\tif (!sitemap.length) {\n\t\treturn <div style={{\n\t\t\tdisplay: 'flex',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t}}>\n\t\t\t<Spin size=\"large\"/>\n\t\t</div>;\n\t}\n\t\n\treturn (\n\t\t<Store.Provider value={store}>\n\t\t\t<AppLayout sitemap={sitemap}/>\n\t\t</Store.Provider>\n\t);\n}\n\nfunction parseHistoryParams(sitemap: Project[]) {\n\tconst [\n\t\t_,\n\t\tid,\n\t\tendpoint,\n\t\tqueryString,\n\t] = window.location.hash.match(/^#?([\\w-]+)(?::([^?]+)(?:\\?(.*))?)?/i) || [];\n\n\treturn {\n\t\tactiveProject: sitemap.find((p) => p.id === id) || sitemap[0],\n\t\tactiveEndpoint: endpoint || '',\n\t\tqueryString: queryString || '',\n\t};\n}\n\nfunction useAppStore() {\n\treturn React.useContext(Store);\n}\n\nconst AppLayout = ({sitemap}: {sitemap: AppSitemap}) => {\n\tconst {\n\t\tstate,\n\t\tupdateState\n\t} = useAppStore();\n\tconst {\n\t\tactiveProject,\n\t\tactiveEndpoint,\n\t} = state;\n\n\tfunction handleSearch(evt: React.ChangeEvent<HTMLInputElement>) {\n\t\tupdateState('search', evt.target.value);\n\t}\n\n\treturn (<Layout style={{height: '100%'}}>\n\t\t<Header className=\"header\">\n\t\t\t<Layout>\n\t\t\t\t<Sider width={150}>\n\t\t\t\t\t<img height=\"32\" src=\"https://img.imgsmail.ru/pm/1.0.3/blocks/ph-logo/img/logotype-mail.ru@2x.png\"/>\n\t\t\t\t</Sider>\n\t\t\t\t\n\t\t\t\t<Content>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\t\tmode=\"horizontal\"\n\t\t\t\t\t\tdefaultSelectedKeys={activeProject && [activeProject.id]}\n\t\t\t\t\t>{\n\t\t\t\t\t\tsitemap.map((project) => (\n\t\t\t\t\t\t\t<Menu.Item key={project.id}>{project.name}</Menu.Item>\n\t\t\t\t\t\t))\n\t\t\t\t\t}</Menu>\n\t\t\t\t</Content>\n\n\t\t\t\t<Sider width={200}>\n\t\t\t\t\t<Input.Search\n\t\t\t\t\t\tplaceholder=\"Поиск по методам\"\n\t\t\t\t\t\tvalue={state.search}\n\t\t\t\t\t\tonChange={handleSearch}\n\t\t\t\t\t/>\n\t\t\t\t</Sider>\n\t\t\t</Layout>\n\t\t</Header>\n\n\t\t<Layout>\n\t\t\t<Sider className=\"site-layout-background\">\n\t\t\t\t<ProjectMenu\n\t\t\t\t\troot={activeProject ? activeProject.entries : []}\n\t\t\t\t\tselected={activeEndpoint}\n\t\t\t\t/>\n\t\t\t</Sider>\n\n\t\t\t<Content\n\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\tstyle={{\n\t\t\t\t\tmargin: 20,\n\t\t\t\t\tminHeight: 280,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{!state.search && activeEndpoint\n\t\t\t\t\t? <ProjectEndpoint id={activeEndpoint}/>\n\t\t\t\t\t: <ProjectTree root={activeProject ? activeProject.entries : []} />\n\t\t\t\t}\n\t\t\t</Content>\n\t\t</Layout>\n\t</Layout>);\n};\n\nfunction ProjectEndpoint({id}: {id: string}) {\n\tconst {\n\t\tstate: {activeProject},\n\t} = useAppStore();\n\tconst entry = React.useMemo(() => {\n\t\tlet result = null as ProjectEntry | null;\n\t\tactiveProject && activeProject.entries.some(function find(e) {\n\t\t\tif (getProjectEntryKey(e) === id) {\n\t\t\t\tresult = e;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn e.entries.some(find);\n\t\t});\n\t\treturn result;\n\t}, [activeProject, id]);\n\n\tif (!entry) {\n\t\treturn <Result\n\t\t\tstatus=\"error\"\n\t\t\ttitle={`Ошибка: «${id}» — не найден`}\n\t\t/>;\n\t}\n\n\tconst scheme = entry.scheme!;\n\n\treturn (\n\t\t<>\n\t\t\t<Breadcrumb style={{marginBottom: 20}}>\n\t\t\t\t<Breadcrumb.Item>{activeProject?.name}</Breadcrumb.Item>\n\t\t\t\t{scheme.project && <Breadcrumb.Item>{scheme.project}</Breadcrumb.Item>}\n\t\t\t\t<Breadcrumb.Item>{scheme.name}</Breadcrumb.Item>\n\t\t\t</Breadcrumb>\n\n\t\t\t{scheme.description && <Typography style={{fontSize: '120%'}}>\n\t\t\t\t<Paragraph>{scheme.description}</Paragraph>\n\t\t\t</Typography>}\n\n\t\t\t<ul>\n\t\t\t\t{scheme.cases.map((c, i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<a href={getCaseHref(activeProject!, entry, c)}>{c.name}</a>&nbsp;\n\t\t\t\t\t\t<Status name={c.status} badge/> \n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t\n\t\t\t<Space direction=\"vertical\" style={{width: '100%'}}>\n\t\t\t\t{scheme.cases.map((c, i) => (\n\t\t\t\t\t<EndpointCase key={i} project={activeProject!} entry={entry} value={c}/>\n\t\t\t\t))}\n\t\t\t</Space>\n\t\t</>\n\t);\n}\n\nfunction getBaseURL(project: Project, entry?: ProjectEntry) {\n\treturn `#${project.id}${entry ? `:${entry.scheme?.project || ''}${entry.name}` : ``}`;\n}\n\nfunction getCaseHref(project: Project, entry: ProjectEntry, c: SchemeCase) {\n\treturn `${getBaseURL(project, entry)}?case=${c.name}`;\n}\n\nfunction renderJSONObject(ref: ReflectItemMap, raw: any, ind = '') {\n\tif (raw == null || typeof raw !== 'object') {\n\t\treturn JSON.stringify(raw);\n\t}\n\tconst nind = ind + '  ';\n\n\treturn `{\\n${Object.entries(raw).map(([key, val]) => {\n\t\tconst refVal = ref[key];\n\t\tconst refNested = refVal && refVal.nested;\n\n\t\tif (refNested && refNested.length) {\n\t\t\tconst nref = refNested.reduce((map, item) => {\n\t\t\t\tmap[item.name] = item;\n\t\t\t\treturn map;\n\t\t\t}, {} as ReflectItemMap);\n\t\t\tval = renderJSONObject(nref, val, ind + ind);\n\t\t} else {\n\t\t\tval = JSON.stringify(val);\n\t\t}\n\n\t\treturn [\n\t\t\t`${nind}/* ${refVal.comment}. <b>${getRefType(refVal)}</b> */`,\n\t\t\t`${nind}\"${key}\": ${val}`,\n\t\t].join('\\n');\n\t}).join(',\\n')}\\n${ind}}`;\n}\n\nfunction getRefType({type, meta_type, enum:ev}: ReflectItem) {\n\tswitch (type) {\n\t\tcase 'struct':\n\t\t\treturn 'object';\n\n\t\tcase 'slice':\n\t\t\treturn `${ev ? `Enum<${ ev.join(' | ') }>` : meta_type}[]`;\n\t}\n\n\treturn type;\n}\n\nfunction EndpointCase({entry, value, project}: {project: Project, entry: ProjectEntry; value: SchemeCase}) {\n\tconst scheme = entry.scheme!;\n\tconst detail = scheme.detail[value.status];\n\tconst params = Object.entries(value.params).map(([key, value]) => {\n\t\tconst ref = detail.request.params[key];\n\t\tconst skey = `${key}${ref.required ? '' : '?'}`;\n\n\t\treturn (\n\t\t\t<div key={key}>\n\t\t\t\t<div>/* {ref.comment}. <b>{getRefType(ref)}</b> */</div>\n\t\t\t\t<b>{skey}</b>={typeof value === 'boolean' ? JSON.stringify(value) : value}\n\t\t\t</div>\n\t\t);\n\t});\n\tconst body = renderJSONObject(detail.response.body, value.body, '  ');\n\tconst isOK = value.status === 'ok';\n\tconst href = getCaseHref(project, entry, value);\n\n\treturn (\n\t\t<Card\n\t\t\tstyle={isOK ? {} : {borderColor: '#ffa39e'}}\n\t\t\ttitle={<>\n\t\t\t\t<div id={href} style={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\ttop: -20,\n\t\t\t\t}}></div>\n\t\t\t\t<span\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tright: 20,\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\twindow.location.hash = href;\n\t\t\t\t\t\tcopyToClipboard(window.location.toString());\n\t\t\t\t\t\tmessage.success('Copied', .4);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<LinkOutlined/>\n\t\t\t\t</span>\n\t\t\t\t<a href={href}>{value.name}</a><br/>\n\t\t\t\t<Status name={value.status}/>\n\t\t\t\t<Tag>{value.method}</Tag>\n\t\t\t\t<span> → &nbsp;{entry.name}</span>\n\t\t\t</>}\n\t\t>\n\t\t\t{value.description && <>\n\t\t\t\t<Text>{value.description}</Text>\n\t\t\t\t<Divider/>\n\t\t\t</>}\n\t\t\t<div style={{background: '#fafafa', margin: -24, padding: 24}}>\n\t\t\t\t{params}\n\t\t\t</div>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t<div>\n\t\t\t\t<CodeHighlight value={'{\\n'\n\t\t\t\t\t+ `  \"status\": ${RPC_STATUS_TO_CODE[value.status]},\\n`\n\t\t\t\t\t+ `  \"body\": ${body}\\n}`\n\t\t\t\t}/>\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n\nfunction Status({name, badge}: {name: string; badge?: boolean}) {\n\tconst color = name === 'ok' ? 'success' : 'error';\n\tconst status = name.toUpperCase();\n\tconst style = badge ? {\n\t\tborderRadius: 5,\n\t\tfontSize: '50%',\n\t\tpadding: '0 4px',\n    \tlineHeight: '14px',\n    \tverticalAlign: 'super',\n\t} : void 0;\n\n\treturn <Tag color={color} style={style}>{status}</Tag>;\n}\n\nfunction ProjectMenu({root, selected}: {root: ProjectEntry[], selected: string}) {\n\tconst {\n\t\tupdateState\n\t} = useAppStore();\n\n\tfunction handleSelect(param: SelectParam) {\n\t\tupdateState('activeEndpoint', param.key);\n\t}\n\n\tconst rootEntries = root.flatMap(r => r.entries);\n\tconst openKeys = [] as string[];\n\t\n\tconst menuItems = rootEntries.map(function render(e) {\n\t\tif (e.type === 'G') {\n\t\t\topenKeys.push(e.name);\n\t\t\treturn (\n\t\t\t\t<SubMenu key={e.name} title={e.name}>\n\t\t\t\t\t{e.entries.map(render)}\n\t\t\t\t</SubMenu>\n\t\t\t);\n\t\t} else if (e.type === 'E') {\n\t\t\treturn (\n\t\t\t\t<Menu.Item\n\t\t\t\t\tkey={getProjectEntryKey(e)}\n\t\t\t\t\ttitle={e.scheme!.description || e.scheme!.name}\n\t\t\t\t>\n\t\t\t\t\t{e.scheme!.name}\n\t\t\t\t</Menu.Item>\n\t\t\t);\n\t\t} else if (e.type === 'HR') {\n\t\t\treturn <Divider />;\n\t\t} else {\n\t\t\tthrow `not supproted: ${e.type}`;\n\t\t}\n\t});\n\n\treturn (\n\t\t<Menu\n\t\t\tmode=\"inline\"\n\t\t\tdefaultOpenKeys={openKeys}\n\t\t\tdefaultSelectedKeys={[selected]}\n\t\t\tstyle={{ height: '100%', borderRight: 0 }}\n\t\t\tonSelect={handleSelect}\n\t\t>\n\t\t\t{menuItems}\n\t\t</Menu>\n\t);\n}\n\nfunction ProjectTree({root}: {root: ProjectEntry[]}) {\n\tconst {state:{search}} = useAppStore();\n\tconst { TreeNode } = Tree;\n\tconst rootEntries = root.flatMap(r => r.entries);\n\t\n\tlet isEmpty = true;\n\tconst nodes = rootEntries.map(function render(e) {\n\t\tif (e.type === 'G') {\n\t\t\treturn (\n\t\t\t\t<TreeNode key={e.name} title={e.name}>\n\t\t\t\t\t{e.entries.map(render)}\n\t\t\t\t</TreeNode>\n\t\t\t);\n\t\t} else if (e.type === 'E') {\n\t\t\tconst name = fuzzyHL(e.name, search);\n\t\t\tconst descr = fuzzyHL(e.scheme!.name, search);\n\n\t\t\tif (name === null && descr === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tisEmpty = false;\n\n\t\t\treturn (\n\t\t\t\t<TreeNode\n\t\t\t\t\tkey={e.name}\n\t\t\t\t\ttitle={<>\n\t\t\t\t\t\t<a href=\"#\">{name || e.name}</a>\n\t\t\t\t\t\t<span> — {descr || e.scheme!.name}</span>\n\t\t\t\t\t</>}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\tthrow `not supproted: ${e.type}`;\n\t\t}\n\t});\n\n\treturn (\n\t\t<Card title=\"Все методы\">\n\t\t\t{isEmpty\n\t\t\t\t? <Result\n\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\ttitle={`По запросу «<b>${search}</b>» ничего не найдено`}\n\t\t\t\t/>\n\t\t\t\t: <Tree\n\t\t\t\t\tshowLine\n\t\t\t\t\tonSelect={void 0}\n\t\t\t\t\tdefaultExpandAll={true}\n\t\t\t\t>\n\t\t\t\t\t{nodes}\n\t\t\t\t</Tree>}\n\t\t</Card>\n\t);\n}\n\nconst fuzzyMemo = {} as {\n\t[value:string]: {\n\t\t[pattern:string]: MatchResult;\n\t}\n};\n\nfunction fuzzyHL(value: string, pattern: string) {\n\tif (fuzzyMemo[value] === void 0) {\n\t\tfuzzyMemo[value] = {};\n\t}\n\n\tif (fuzzyMemo[value][pattern] === void 0) {\n\t\tfuzzyMemo[value][pattern] = fuzzyMatch(pattern, value, {\n\t\t\tpre: '<span style=\"background: yellow;\">',\n\t\t\tpost: '</span>',\n\t\t});\n\t}\n\n\tconst result = fuzzyMemo[value][pattern];\n\treturn result ? <span dangerouslySetInnerHTML={{__html: result.rendered}}/> : null;\n}\n\nfunction getProjectEntryKey(e: ProjectEntry) {\n\tlet key = e.name;\n\t\n\tif (e.scheme && e.scheme.project) {\n\t\tkey = `${e.scheme.project}${key}`;\n\t}\n\n\treturn key;\n}\n\nexport default App;\n\n\nfunction copyToClipboard(val: string) {\n\tconst el = document.createElement('textarea');\n\tel.value = val;\n\tel.setAttribute('readonly', '');\n\tel.style.position = 'absolute';\n\tel.style.left = '-9999px';\n\t\n\tdocument.body.appendChild(el);\n\n\tconst selection = document.getSelection()\n\tconst currentRanges = [] as Range[];\n\n\tif (selection) {\n\t\tfor (let i = 0; i < (selection.rangeCount || 0); i++) {\n\t\t\tcurrentRanges.push(selection.getRangeAt(i));\n\t\t}\n\t}\n\n\tel.select();\n\tdocument.execCommand('copy');\n\tdocument.body.removeChild(el);\n\t\n\tif (currentRanges.length) { \n\t\tconst selection = document.getSelection()\n\t\tif (selection) {\n\t\t\tselection.removeAllRanges();\n\t\t\tcurrentRanges.forEach(range => {\n\t\t\t\tselection.addRange(range);\n\t\t\t});\n\t\t}\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App {...Object((globalThis as any).GODRAFT_CONFIG)} />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}